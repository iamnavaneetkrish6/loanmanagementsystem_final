package com.hexaware.loanmanagementsystem.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.hexaware.loanmanagementsystem.dto.CustomerLoanInformationDTO;
import com.hexaware.loanmanagementsystem.entity.CustomerDetails;
import com.hexaware.loanmanagementsystem.entity.CustomerLoanInformation;
import com.hexaware.loanmanagementsystem.repository.CustomerDetailsRepository;
import com.hexaware.loanmanagementsystem.repository.CustomerLoanInformationRepository;

@Service
public class CustomerLoanInformationServiceImp implements ICustomerLoanInformationService {

	@Autowired
	private CustomerLoanInformationRepository customerLoanInformationRepository; 
	
	@Autowired
	private CustomerDetailsRepository customerDetailsRepository;
	
	
	public CustomerLoanInformationServiceImp() {

		super();
	}

	@Override
	public CustomerLoanInformation createCustomerLoanInformation(
			CustomerLoanInformationDTO customerLoanInformationDto) {

		// from loanapplydetails auto enter
		CustomerLoanInformation customerLoanInformation = new CustomerLoanInformation();
		customerLoanInformation.setLoanNumber(customerLoanInformationDto.getLoanNumber());
		customerLoanInformation.setLoanAmount(customerLoanInformationDto.getLoanAmount());
		customerLoanInformation.setCustomerName(customerLoanInformationDto.getCustomerName());
		
		// get customer details
		
		CustomerDetails customerDetails = customerDetailsRepository.findByCustomerName(customerLoanInformationDto.getCustomerName());
		
		// insert into customer table
		customerDetails.getCustomerLoanInformation().add(customerLoanInformation);
		
		// mapping btw them
		customerLoanInformation.setCustomerDetails(customerDetails);
		
		return   customerLoanInformationRepository.save(customerLoanInformation) ;
	}

	@Override
	public CustomerLoanInformation updateCustomerLoanInformation(
			CustomerLoanInformationDTO customerLoanInformationDto) {

		// admin status update for loan
		CustomerLoanInformation customerLoanInformation = getCustomerLoanInformationById(customerLoanInformationDto.getLoanInformationId());
		customerLoanInformation.setLoanOrginationDate(customerLoanInformationDto.getLoanOrginationDate());
		customerLoanInformation.setLoanStatus(customerLoanInformationDto.getLoanStatus());
		
		
		
		return customerLoanInformationRepository.save(customerLoanInformation);
	}

	@Override
	public void deleteCustomerLoanInformation(long customerLoanInformationID) {

		customerLoanInformationRepository.deleteById(customerLoanInformationID);
		
	}

	@Override
	public CustomerLoanInformation getCustomerLoanInformationById(long customerLoanInformationID) {

		return customerLoanInformationRepository.findById(customerLoanInformationID).orElse(new CustomerLoanInformation());
	}

	@Override
	public List<CustomerLoanInformation> getAllCustomerLoanInformation() {

		
		return customerLoanInformationRepository.findAll();
	}

}
